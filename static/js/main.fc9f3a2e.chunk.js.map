{"version":3,"sources":["Components/Bar.js","url.js","Components/Inputs.js","statistics.js","App.js","reportWebVitals.js","index.js"],"names":["Bar","this","props","data","maximun","bars","maxHeight","orderedData","sort","a","b","height","reduce","acumulator","element","barStyles","map","h","marginTop","width","horizontalLineWidth","forEach","Style","index","adjustMarginLabel","slice","parseFloat","push","className","style","label","frecuences","frecuencesfontSize","fontSize","paddingTop","i","unshift","toFixed","chartWidth","length","title","Component","defaultProps","url","activeCategory","Inputs","postNewPurchase","bind","postNewPurchaseOnEnter","insertSavedCategories","onClick","selectCategory","onKeyUp","addCategoryOnEnter","activeOtherCathegoryInput","type","placeholder","event","keyCode","verifyDataEntries","cathegory","price","dataIsValid","Notification","axios","post","category","status","selectedCategory","document","querySelector","classList","remove","value","update","color","addCategory","target","peviousCategorySelection","add","innerText","newcategoryText","categoriesDiv","listOfCategories","children","filter","child","includes","newCategory","createElement","childElementCount","appendChild","addEventListener","postCategory","name","alert","notification","htmlClass","get","categories","categotyButton","hist","numbreOfIntervals","isNaN","lenght","Math","ceil","max","min","intervals","point","position","round","labels","int","groupby","variable","groupedData","datum","arr","indexOf","unique","uniqueVariable","groupBy","variables","aux","group","newGroups","key","Object","assign","App","purchaseDistributionByPrice","purchaseDistributionByCathegory","forceUpdate","getPurchases","purchases","prices","console","log","ReactDOM","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc9f3a2e.chunk.js","sourcesContent":["import React,{Component} from \"react\";\nimport '../assets/css/bar.css'\n\n\nclass Bar extends Component{\n\nrender(){\n\n\n    if(!this.props.data[0]) return null\n\n    let bars = [] ;\n    let maxHeight = 240;\n\n//order data\n\n    let orderedData = this.props.data.sort((a,b)=>{return a.height-b.height});\n\n//bars styles\n\n    let maximun;\n\n    if(!this.props.data[1]){\n        maximun = this.props.data[0].height;\n    }\n    else{\n        maximun = this.props.data.reduce((acumulator,element)=>{\n        return acumulator.height>element.height?acumulator.height:element.height;\n    });}\n\n    let normalizedHeights=this.props.data.map((element)=>{\n        return maxHeight*element.height/maximun\n          });\n\n    let barStyles = normalizedHeights.map((h)=>{\n        return {height: h+\"px\",marginTop:maxHeight-h,width:this.props.width}        \n    });\n\n\n    let horizontalLineWidth = 0;\n\n    barStyles.forEach((Style,index)=>{\n\n        let adjustLabel = 35;\n        let adjustMarginLabel = (Style['height'].slice(0,-2)-adjustLabel)+\"px\"\n        horizontalLineWidth +=parseFloat(this.props.width.slice(0,-2))+index*4;\n\n        bars.push(\n            <div key= {index} className=\"bar\" style={Style}>\n                    <div className=\"horizontalLines\" style={{width:horizontalLineWidth+\"px\"}}></div>\n                    <p className=\"label\" style={{marginTop:adjustMarginLabel}} >\n                        {orderedData[index].label}\n                    </p>\n            </div>);\n    });\n \n// frecuences style (labels in the y-axe)\n\nlet frecuences = [];  \nlet numberOfFrecuences = 5;\nlet frecuencesfontSize={fontSize:maxHeight/18}\nlet paddingTop = ( (maxHeight-(numberOfFrecuences+1.1)*frecuencesfontSize.fontSize)/(numberOfFrecuences) )+\"px\"\n\n    for(let i=0;i<=numberOfFrecuences;i++){\n\n        paddingTop= (i===numberOfFrecuences)?0:paddingTop;\n\n        frecuences.unshift(\n            <div key={i} style={{...frecuencesfontSize,paddingTop:paddingTop}}>{i?(maximun*i/numberOfFrecuences).toFixed(1):i}</div>\n        );\n    }\n\n/*\n\n    let uniqueHeights = this.props.heights.filter( (value, index, heights) =>{\n        return heights.indexOf(value) === index;\n        });\n\n\n    let frecuenceFontHeight =Math.round( maxHeight / (3*uniqueHeights.length)) \n    let frecuencesfontSize = {\n              fontSize: frecuenceFontHeight+\"px\"\n    };\n\n\n    uniqueHeights.forEach( (h,i,uniHeights)=>{\n\n        let paddingTop = (uniHeights[i+1]?uniHeights[i+1]:h)-h ;\n\n        paddingTop = ((paddingTop-frecuenceFontHeight)>0)?(paddingTop-6):0;\n\n        frecuences.unshift(\n            <div  style={{...frecuencesfontSize,paddingTop:paddingTop}}>{h+\"-\"}</div>);\n    });\n\n*/        \n    let chartWidth = this.props.data.length*this.props.width.slice(0,-2)+3*this.props.data.length+50;\n\n\n        return (\n            <section>\n            <p className=\"title\">{this.props.title}</p>\n            <div className=\"frecuences\" style={{height:maxHeight+\"px\"}} >{frecuences}</div>\n            <div className=\"chart\" style={{width:chartWidth+\"px\"}}>\n                    {bars}\n            </div>\n            </section>\n        );\n    }\n}\n\nconst data = []\nfor(let i=0;i<10;i++)  data.push({height:\"10\",label:\"\"})\n\n\nBar.defaultProps = {\n    data:data,\n    width:\"30px\",\n    title:\"\"\n};\n\nexport default Bar ;","export const url = \"https://jsonbox.io/box_fbb6d470aad519ba5e71\"","import {Component} from 'react'\nimport axios from 'axios';\nimport '../assets/css/input.css'\nimport {url} from '../url'\n//cant press twice same cathegory\nlet activeCategory = false;\n\nexport class Inputs extends Component{\n    \n    constructor(props){\n        super(props)\n        this.postNewPurchase = this.postNewPurchase.bind(this);\n        this.postNewPurchaseOnEnter = this.postNewPurchaseOnEnter.bind(this);\n    }\n    \n    //\n    componentDidMount(){\n        insertSavedCategories();\n    }\n\n    render(){\n        return (<div>\n            \n            <div className=\"categories inlineTable\">\n                <button onClick={selectCategory}>Food</button>\n                <button onClick={selectCategory}>Rent</button>\n                <button onClick={selectCategory}>Clothes</button>\n                <button onClick={selectCategory}>Tech</button>\n            </div>\n    \n            <div className=\"left inlineTable\">    \n                <div>\n                    <input onKeyUp={addCategoryOnEnter} onClick={activeOtherCathegoryInput} className=\"otherCategory\" type =\"text\" placeholder=\"Other Type\"></input>\n                </div>\n                <div className=\"categoryNotification notification\"></div>\n                <input className=\"cost\" onKeyUp={this.postNewPurchaseOnEnter} placeholder=\"$cost\" type=\"number\"></input>\n                <div className=\"priceNotification notification\"></div>\n                <button  onClick={this.postNewPurchase}>Load Purchase</button>\n                <div className=\"purchaseDataNotification notification\"></div>\n            </div>\n\n        </div>)\n    } \n\n    postNewPurchaseOnEnter(event){\n        if(event.keyCode===13){\n            //\n            this.postNewPurchase();\n        }\n    }\n    \n    async postNewPurchase(){\n    \n        let {cathegory,price,dataIsValid} = verifyDataEntries();\n        \n        if(dataIsValid){\n    \n            Notification(\"Loading\",\".categoryNotification\");\n    \n          let {status} = await axios.post(url+\"/purchases\",{\n              category:cathegory,\n              price:price\n            })\n        if(status===200){\n    \n            Notification(\"\",\".categoryNotification\");\n            Notification(\"\",\".priceNotification\");\n            Notification(\"\",\".purchaseDataNotification\");\n    \n            let selectedCategory = document.querySelector(\".selectedCategory\") ;\n            if(selectedCategory){\n                selectedCategory.classList.remove(\"selectedCategory\");\n            }\n            else{document.querySelector('.otherCategory').value = \"\";}\n            document.querySelector('.cost').value = \"\";\n            this.props.update() \n        }\n          else{\n            Notification(\"Sorry purchase not registed\\n error:\"+status,\"purchaseDataNotification\")\n          }\n        }\n    \n        //reset the values as before the entry\n        activeCategory=false;\n    \n    }\n    \n}\n\nlet activeOtherCathegoryInput=()=>{\n    //if there is an cathegory selectec deselect it\n    if(document.querySelector(\".selectedCategory\")){\n        document.querySelector(\".selectedCategory\").classList.remove(\"selectedCategory\")\n        document.querySelector(\".otherCategory\").style.color=\"black\";\n        activeCategory = false;\n    }\n}\nconst addCategoryOnEnter=(event)=>{\n    if(event.keyCode===13){\n        addCategory(event.target.value);\n    }\n}\n\nlet selectCategory =(event)=>{\n    //deselect the previous selection\n    let peviousCategorySelection=document.querySelector(\".selectedCategory\");\n    if(peviousCategorySelection){\n    peviousCategorySelection.classList.remove(\"selectedCategory\")\n    }\n\n    event.target.classList.add(\"selectedCategory\")\n\n    document.querySelector(\".otherCategory\").style.color=\"gray\"\n    activeCategory = event.target.innerText;\n}\n\nlet addCategory=(newcategoryText)=>{\n\n    let categoriesDiv = document.querySelector(\".categories\");\n    let listOfCategories = [...categoriesDiv.children].filter((child=>child.innerText.length>0)).map((child)=>{return child.innerText})\n\n\n    if(newcategoryText.length>0 && !listOfCategories.includes(newcategoryText)){\n    \n        let newCategory = document.createElement(\"button\");\n        newCategory.innerText = newcategoryText;\n        if((categoriesDiv.childElementCount+1)%5===0){\n        categoriesDiv.appendChild(document.createElement(\"br\"))\n        }\n        newCategory.addEventListener(\"click\",selectCategory)\n        categoriesDiv.appendChild(newCategory);\n        Notification(\"\",\".categoryNotification\");\n        //\n        postCategory(newcategoryText);       \n    }\n    else {\n        \n        if(!newcategoryText.length){\n        Notification(\"Empty Category\",\".categoryNotification\");}\n        else{\n        Notification(\"Existing Category\",\".categoryNotification\");\n        }\n    }\n}\n\nlet postCategory=async(category)=>{\n\n    let endPoint = url+\"/categories\"\n    let {status} = await axios.post(endPoint,{name:category})\n    if(status!==200){\n        alert(\"Error saving the category: \"+status)\n    }\n}\nlet verifyDataEntries=()=>{\n\n    if(!activeCategory){\n        \n        activeCategory = document.querySelector(\".otherCategory\").value;\n\n        if(activeCategory){\n            addCategory(activeCategory);\n            Notification(\"\",\".categoryNotification\")\n        }\n        else{\n            Notification(\"Select a category or enter a new one\",\".categoryNotification\");\n            return {cathegory:\"\",price:0,dataIsValid:false};\n        }\n    }else{Notification(\"\",\".categoryNotification\")}\n\n//remove the empty category \n    let price = document.querySelector(\".cost\").value\n    if(!price||price<0){\n        Notification(\"Enter the price of your purchase\",\".priceNotification\");\n        return {cathegory:\"\",price:0,dataIsValid:false};\n    }\n    return {cathegory:activeCategory,price:price,dataIsValid:true};\n}\n\n\nlet Notification = (notification,htmlClass)=>{\n    document.querySelector(htmlClass).innerText=notification;\n}\n\nlet insertSavedCategories=async()=>{\n\n    let {data,status} = await axios.get(url+\"/categories\");\n    if(status===200){ \n\n        let categories = document.querySelector(\".categories\");\n        let savedCategoriesJson=[...data];\n\n        savedCategoriesJson.forEach((category,i)=>{\n          \n            if(i%4===0)categories.appendChild(document.createElement(\"br\"));\n            let categotyButton = document.createElement(\"button\");\n            categotyButton.innerText = category.name;\n            categotyButton.addEventListener(\"click\",selectCategory)\n            categories.appendChild(categotyButton)\n        \n        });\n        \n    }\n}","// the user will have an slide for intervals\n\nexport const hist = function(data,numbreOfIntervals=0){\n\n    if(!data[0])return null;\n\n    data = data.filter(element=>!isNaN(element));\n\n    if( !numbreOfIntervals ){\n        if(data.lenght < 100)numbreOfIntervals = Math.ceil(5+data.lenght/20);\n        else numbreOfIntervals = 10;\n    }\n\n    let max = Math.max(...data);\n    let min = Math.min(...data);\n    let intervals = [];\n    let frecuences = [];\n\n    for(let i=1;i<=numbreOfIntervals;i++) {\n        intervals.push((min+max*i/numbreOfIntervals))\n        frecuences.push(0)\n    }\n\n    //posibles  datos negativos\n\n    data.forEach(element => {\n        \n        for(let point in intervals){\n            if(element<intervals[point]){\n                let position = Math.round((intervals[point]-min)*numbreOfIntervals/max)-1;\n                frecuences[position] += 1;\n                break;\n            }\n        }\n    });\n    let labels = intervals.map((element,i,int)=>{\n        return Math.round(int[i-1]?int[i-1]:0) +\" - \"+Math.round(element);\n    });\n    return {\"labels\":labels, \"frecuences\":frecuences}\n}\n\n/* prueba hist\nlet data = [];\nfor (let i =0;i<10;i++)data.push(Math.random()*100);\nconsole.log(hist(data))*/\n\nconst sum = function(data){\n    return 0//data.reduce((acumulator, current)=>{acumulator+current})\n}\n\nconst mean = function(data){\n    return sum(data)/data.lenght;\n}\n\nconst unique = function(data){\n    return data.filter((datum, index, arr) => arr.indexOf(datum) === index)\n}\n\nconst groupby = function(data, variable){\n  \n  let groupedData = {};\n  let UniqueVariables = unique(data.map( datum => datum[variable]))\n\n  UniqueVariables.forEach( uniqueVariable =>{\n      groupedData[uniqueVariable] = data.filter(element => element[variable]===uniqueVariable) ;\n    });\n  return groupedData;\n}\n//prueba groupby1 (one variable)\n/*console.log(groupby([\n    {name:\"David\",hair:\"0\"},\n    {name:\"Edwin\",hair:\"1234\"},\n    {name:\"Jhon\",hair:\"1234\"}\n\n],\"hair\"));\n*/\n\nexport const groupBy = function(data, variables){\n\n    if(!data[0])return null\n\n    let groupedData = {\"\":data};\n    \n    variables.forEach( variable =>{\n\n        let aux = {};\n\n        for(let group in groupedData ){\n            let newGroups = groupby(groupedData[group], variable);\n        //delete groupedData[group];\n            for (let key in newGroups){\n              aux[group+\" \"+key] = newGroups[key]\n            }\n        }\n        groupedData = Object.assign({},aux);\n\n    });\n    return groupedData;\n}\n\nlet data1 = [\n    {name:\"Jotamario\",yearsOld:\"100\",profession:\"presenter\"},\n    {name:\"David\",yearsOld:\"36\",profession:\"programer\"},\n    {name:\"Luis\",yearsOld:\"36\", profession:\"programer\"},\n    {name:\"Nicolas\",yearsOld:\"36\",profession:\"programer\"},\n    {name:\"Carolina\",yearsOld:\"44\",profession:\"Teacher\"},\n    {name:\"Hilary\",yearsOld:\"41\",profession:\"violinist\"},\n    {name:\"Janine\",yearsOld:\"43\",profession:\"violinist\"},\n    {name:\"Sofia Mutter\",yearsOld:\"43\",profession:\"violinist\"}\n    \n]\n\n//console.log(groupBy(data1,[\"profession\",\"yearsOld\"]));","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/App.css'\nimport axios from 'axios';\nimport Bar from './Components/Bar'\nimport {Inputs} from './Components/Inputs' \nimport {hist,groupBy} from './statistics'\nimport {url} from \"./url\";\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n\n  render(){\n\n    purchaseDistributionByPrice();\n    purchaseDistributionByCathegory();\n\n    return (\n      <div className=\"App center\">\n        <p className=\"title\"><em>Log your purchase type and price</em></p><br />        \n        <Inputs update={()=>{this.update();}} />\n        <div className=\"aux inline\"></div>\n        <div className=\"aux2  inline\"></div>\n      </div>\n  );\n  }\n\n  update(){\n    this.forceUpdate();\n  }\n\n}\n\n\nconst getPurchases = async()=>{\n    let {data,status} = await axios.get(url+\"/purchases\")\n    if(status===200)return data\n    return false;\n}\n\nconst purchaseDistributionByPrice = async()=>{\n  let purchases = await getPurchases();\n  let prices = purchases.map(element=>element.price)\n\n  if(!prices[0])return null;\n  \n  let {frecuences,labels} = hist(prices);\n  let data = [];\n\n  for(let i=0;i<frecuences.length;i++){\n    data.push({label:labels[i],height:frecuences[i]})\n  }\n  console.log(data)\n   ReactDOM.render(\n        <Bar data={data} title=\"Prices Distribution\"/>\n   ,document.querySelector(\".aux\")\n   );\n}\n\nconst purchaseDistributionByCathegory = async()=>{\n\n  let purchases = await getPurchases();\n  let groupedData = groupBy(purchases,[\"category\"])\n  let data = []\n  for(let key in groupedData){\n      \n      data.push({label:key,height:groupedData[key].length})\n      \n  }\n  console.log(data)\n  ReactDOM.render(\n        <Bar data={data} title=\"Count by Cathegories\"/>\n        ,document.querySelector(\".aux2\")\n   );\n\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}